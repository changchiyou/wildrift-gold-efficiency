name: Auto Update Wild Rift Patch

# on:
#   schedule:
#     # Run every hour
#     - cron: '0 * * * *'
#   workflow_dispatch:
#     # Allow manual triggering

on:
  pull_request:
    types: [opened, reopened, synchronize, labeled, unlabeled]
    branches:
      - main

permissions:
  id-token: write
  contents: write

env:
  RSS_URL: "${{ vars.RSS_URL }}"

jobs:
  check-for-updates:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup Python and install dependencies
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: 'pip'
        cache-dependency-path: '**/requirements.txt'
    - run: pip install -r requirements.txt

    - name: Check for new patch version (MOCK TEST)
      id: check-patch
      run: |
        # MOCK TEST: Simulate finding version 6.2f for testing
        echo "Found patch URLs:"
        echo "https://wildrift.leagueoflegends.com/en-us/news/game-updates/wild-rift-patch-notes-6-2f"
        
        echo "Processing URL: https://wildrift.leagueoflegends.com/en-us/news/game-updates/wild-rift-patch-notes-6-2f"
        echo "Extracted version: 6.2f"
        
        VERSION="6.2f"
        VERSION_UNDERSCORE="6_2f"
        
        # Check if this version already exists in _pages
        if [ -d "_pages/$VERSION_UNDERSCORE" ]; then
          echo "Version $VERSION already exists in _pages/$VERSION_UNDERSCORE"
          echo "No new versions found"
          exit 0
        fi

        # Check if this version already exists in _data
        if [ -f "_data/items_$VERSION_UNDERSCORE.yml" ]; then
          echo "Version $VERSION already exists in _data/items_$VERSION_UNDERSCORE.yml"
          echo "No new versions found"
          exit 0
        fi

        echo "New version found: $VERSION"
        echo "new_version=$VERSION" >> $GITHUB_OUTPUT
        echo "patch_url=https://wildrift.leagueoflegends.com/en-us/news/game-updates/wild-rift-patch-notes-6-2f" >> $GITHUB_OUTPUT
        exit 0

    - name: Update to new version with Claude Code
      if: steps.check-patch.outputs.new_version
      uses: anthropics/claude-code-action@v1
      with:
        anthropic_api_key: ${{ secrets.ANTHROPIC_API_KEY }}
        claude_args: |
          --model "${{ vars.ANTHROPIC_MODEL }}"
        settings: |
          {
            "env": {
              "ANTHROPIC_BASE_URL": "${{ vars.ANTHROPIC_BASE_URL }}",
            }
          }
        prompt: |
          Update to the latest version ${{ steps.check-patch.outputs.new_version }} with the following information from the latest patch note: 
          
          ## ITEMS

          We're making several adjustments to improve item balance and gameplay diversity. These changes aim to create more strategic choices in item builds while maintaining competitive integrity.

          #### Infinity Edge
          *Base Stats*
          * Attack Damage: 70 â†’ 75
          * Critical Strike Chance: 25% â†’ 20%

          #### Bloodthirster
          *Base Attributes*
          * Attack Damage: 55 â†’ 60
          * Price: 3400 gold â†’ 3500 gold

          #### Guardian Angel
          *Passive*
          * Resurrection Health: 50% â†’ 40%
          * Cooldown: 300s â†’ 240s

          #### Mortal Reminder
          *Base Stats*
          * Attack Damage: 45 â†’ 50
          * Armor Penetration: 35% â†’ 30%

          #### Rabadon's Deathcap
          *Base Attributes*
          * Ability Power: 120 â†’ 130
          * Price: 3600 gold â†’ 3800 gold

          #### Void Staff
          *Base Stats*
          * Ability Power: 70 â†’ 65
          * Magic Penetration: 40% â†’ 45%

          #### Trinity Force
          *Base Attributes*
          * Attack Damage: 25 â†’ 30
          * Health: 200 â†’ 250
          * Price: 3733 gold â†’ 3900 gold

          #### Black Cleaver
          *Unique Passive*
          * Armor Reduction: 6% per stack â†’ 5% per stack
          * Health: 400 â†’ 450

          #### Dead Man's Plate
          *Base Stats*
          * Health: 425 â†’ 400
          * Armor: 45 â†’ 50

          #### Thornmail
          *Passive*
          * Armor: 80 â†’ 75
          * Reflect Damage: 25 + 10% bonus armor â†’ 30 + 15% bonus armor

          #### Spirit Visage
          *Base Attributes*
          * Health: 450 â†’ 500
          * Magic Resistance: 55 â†’ 50
          * Price: 2900 gold â†’ 3000 gold

          #### Hextech Gunblade
          *Active*
          * Attack Damage: 40 â†’ 35
          * Ability Power: 80 â†’ 85
          * Active Damage: 175-253 â†’ 200-280

          #### Nashor's Tooth
          *Base Stats*
          * Ability Power: 80 â†’ 75
          * Attack Speed: 50% â†’ 55%
          * Price: 3000 gold â†’ 2900 gold

    - name: Generate diff report
      if: steps.check-patch.outputs.new_version
      id: generate-diff
      run: |
        # Get the diff between latest and previous items files
        NEW_VERSION="${{ steps.check-patch.outputs.new_version }}"
        VERSION_UNDERSCORE=$(echo "$NEW_VERSION" | sed 's/\./_/')
        LATEST_ITEMS="_data/items_$VERSION_UNDERSCORE.yml"
        
        # Find the previous version (second latest)
        PREVIOUS_ITEMS=$(ls _data/items_*.yml | grep -v "$LATEST_ITEMS" | sort -V | tail -1)
        
        if [ -f "$LATEST_ITEMS" ] && [ -f "$PREVIOUS_ITEMS" ]; then
          echo "Comparing $PREVIOUS_ITEMS with $LATEST_ITEMS"
          DIFF_OUTPUT=$(git diff --no-index "$PREVIOUS_ITEMS" "$LATEST_ITEMS" || true)
        else
          DIFF_OUTPUT="Could not generate diff: files not found\nLatest: $LATEST_ITEMS (exists: $(test -f "$LATEST_ITEMS" && echo "yes" || echo "no"))\nPrevious: $PREVIOUS_ITEMS (exists: $(test -f "$PREVIOUS_ITEMS" && echo "yes" || echo "no"))"
        fi
        
        # Set the diff output as a step output (properly escaped)
        {
          echo 'diff_output<<EOF'
          echo "$DIFF_OUTPUT"
          echo 'EOF'
        } >> $GITHUB_OUTPUT

    - name: Create Pull Request
      if: steps.check-patch.outputs.new_version
      id: cpr
      uses: peter-evans/create-pull-request@v7
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: "$(cat <<'EOF'
          chore: auto-update to Wild Rift patch ${{ steps.check-patch.outputs.new_version }}
          
          ðŸ¤– Generated with Claude Code
          
          Co-Authored-By: Claude <noreply@anthropic.com>
          EOF
          )"
        committer: github-actions[bot] <41898282+github-actions[bot]@users.noreply.github.com>
        author: ${{ github.actor }} <${{ github.actor_id }}+${{ github.actor }}@users.noreply.github.com>
        signoff: false
        branch: auto-update-patch-${{ steps.check-patch.outputs.new_version }}
        delete-branch: true
        title: 'Auto-update to Wild Rift patch ${{ steps.check-patch.outputs.new_version }}'
        body: |
          ## Summary
          
          - Automated update to Wild Rift patch version ${{ steps.check-patch.outputs.new_version }}
          - Items data updated based on latest patch notes
          
          ## Changes of items data between the latest and the last one:
          
          ```diff
          ${{ steps.generate-diff.outputs.diff_output }}
          ```
          
          ## Source
          Patch notes: ${{ steps.check-patch.outputs.patch_url }}
          
          ðŸ¤– Generated with Claude Code
        labels: |
          patch-update
        draft: false
